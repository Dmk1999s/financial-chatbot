version: '3.8'

services:
  redis:
    container_name: redis
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  web:
    container_name: web
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DJANGO_SETTINGS_MODULE: main.settings  # .py는 생략
    env_file:
      - .env
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/home/app/web/static  # ✅ static 파일을 volume에 저장
      - media_volume:/home/app/web/media
    depends_on:
      redis:
        condition: service_healthy
    networks:
        - app-network
    deploy:
      resources:
        limits:
          memory: 1G  # 메모리 제한 증가
        reservations:
          memory: 512M  # 예약 메모리 증가

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["sh", "/entrypoint.celery.sh"]
    env_file:
      - .env
    restart: always
    volumes:
      - .:/app
    depends_on:
      - redis
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  nginx:
    container_name: nginx
    build:
      context: ./config/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
      - /etc/nginx-certs:/etc/nginx-certs:ro
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 64M
        reservations:
          memory: 32M

volumes:
  static_volume:
  media_volume:

networks:
  app-network: